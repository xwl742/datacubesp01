name: build

on:
  pull_request:
    paths:
      - '**'

  push:
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/main.yml'
      - '!docker/**'
      - '!docs/**'
      - '!contrib/**'

jobs:
  main:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      matrix:
        docker_image:
          - opendatacube/datacube_sp-tests:latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0

    - name: Config
      id: cfg
      run: |
        push_dea=no
        push_pypi=no
        push_test_pypi=no
        primary=no

        if [ "${{ matrix.docker_image }}" == "opendatacube/datacube-tests:latest" ]; then
           primary=yes
        fi

        case "${GITHUB_REF}" in
        "refs/heads/develop")
             push_dea=${primary}
             ;;
        "refs/tags/"*)
             push_pypi=${primary}
             push_test_pypi=${primary}
             push_dea=${primary}
             ;;
        "refs/heads/"*)
             ;;
        "refs/pull/"*)
             ;;
        *)
             ;;
        esac

        for x in primary push_pypi push_test_pypi push_dea; do
           echo "${x}=${!x}" >> $GITHUB_OUTPUT
        done

    - name: Pull Docker
      run: |
        docker pull "${{ matrix.docker_image }}"

    - name: Build Packages
      run: |
        cat <<EOF | docker run --rm -i  \
                  -v $(pwd):/code \
                  -e SKIP_DB=yes \
                  ${{ matrix.docker_image }} bash -
        python setup.py bdist_wheel sdist
        ls -lh ./dist/
        if hash twine 2> /dev/null ; then
           twine check ./dist/*
        else
           echo "WARNING: twine is missing from the docker!"
        fi
        EOF

    - name: Run Tests
      run: |
        cat <<EOF | docker run --rm -i -v $(pwd):/code ${{ matrix.docker_image }} bash -
          pip install -e /code/tests/drivers/fail_drivers --no-deps
          pip install -e /code/examples/io_plugin --no-deps

          pytest -r a \
            --cov datacube \
            --cov-report=xml \
            --doctest-ignore-import-errors \
            --durations=5 \
            datacube \
            tests \
            integration_tests
        EOF

    - name: Publish to dea packages repo
      if: steps.cfg.outputs.push_dea == 'yes'
      run: |
        if [ -n "${AWS_ACCESS_KEY_ID}" ]; then
           echo "Using Keys: ...${AWS_ACCESS_KEY_ID:(-4)}/...${AWS_SECRET_ACCESS_KEY:(-4)}"
           aws s3 cp ./dist/datacube-*whl "${S3_DST}/"
           aws s3 cp ./dist/datacube-*tar.gz "${S3_DST}/"
        else
           echo "Skipping upload AWS_ACCESS_KEY_ID is not set"
        fi
      env:
          AWS_DEFAULT_REGION: 'ap-southeast-2'
          AWS_REGION: 'ap-southeast-2'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_DST: 's3://datacube_sp-core-deployment/datacube_sp'

    - name: Publish to Test PyPi
      if: steps.cfg.outputs.push_test_pypi == 'yes'
      run: |
        if [ -n "${TWINE_PASSWORD}" ]; then
          docker run --rm  \
            -v $(pwd):/code \
            -e SKIP_DB=yes \
            ${{ matrix.docker_image }} \
            twine upload \
              --verbose \
              --non-interactive \
              --disable-progress-bar \
              --username=__token__ \
              --password=${TWINE_PASSWORD} \
              --repository-url=${TWINE_REPOSITORY_URL} \
              --skip-existing dist/* || true
        else
           echo "Skipping upload as 'TestPyPiToken' is not set"
        fi

      env:
        TWINE_PASSWORD: ${{ secrets.TestPyPiToken }}
        TWINE_REPOSITORY_URL: 'https://test.pypi.org/legacy/'

    - name: Publish to PyPi
      if: steps.cfg.outputs.push_pypi == 'yes'
      run: |
        if [ -n "${TWINE_PASSWORD}" ]; then
          docker run --rm  \
            -v $(pwd):/code \
            -e SKIP_DB=yes \
            ${{ matrix.docker_image }} \
            twine upload \
              --verbose \
              --non-interactive \
              --disable-progress-bar \
              --username=__token__ \
              --password=${TWINE_PASSWORD} \
              --skip-existing dist/*
        else
           echo "Skipping upload as 'PyPiToken' is not set"
        fi

      env:
        TWINE_PASSWORD: ${{ secrets.PyPiToken }}

    - name: Upload coverage to Codecov
      if: steps.cfg.outputs.primary == 'yes'
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
